// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi_Abdelrhman_khaled_0522015_S4.Data;

#nullable disable

namespace Elsewedy_Platform.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250217092459_Elsewedy")]
    partial class Elsewedy
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cousre_acStudent", b =>
                {
                    b.Property<int>("cousres_acId")
                        .HasColumnType("int");

                    b.Property<int>("studentsId")
                        .HasColumnType("int");

                    b.HasKey("cousres_acId", "studentsId");

                    b.HasIndex("studentsId");

                    b.ToTable("Cousre_acStudent");
                });

            modelBuilder.Entity("Cousre_softStudent", b =>
                {
                    b.Property<int>("cousre_softId")
                        .HasColumnType("int");

                    b.Property<int>("studentsId")
                        .HasColumnType("int");

                    b.HasKey("cousre_softId", "studentsId");

                    b.HasIndex("studentsId");

                    b.ToTable("Cousre_softStudent");
                });

            modelBuilder.Entity("Elsewedy_Platform.Models.Porject_Information", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("company_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("f_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("l_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("massege")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("project_information")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("porject_Information");
                });

            modelBuilder.Entity("Elsewedy_Platform2.Models.Cousre_ac", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_teacher")
                        .HasColumnType("int");

                    b.Property<byte[]>("image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("cousre_As");
                });

            modelBuilder.Entity("Elsewedy_Platform2.Models.Cousre_soft", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_instractor")
                        .HasColumnType("int");

                    b.Property<byte[]>("imgae")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("specialization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("cousre_Softs");
                });

            modelBuilder.Entity("Elsewedy_Platform2.Models.Instractor_Software", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("specialization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("instractor_Softwares");
                });

            modelBuilder.Entity("Elsewedy_Platform2.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("National_Id")
                        .HasColumnType("int");

                    b.Property<string>("grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("students");
                });

            modelBuilder.Entity("Elsewedy_Platform2.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("teachers");
                });

            modelBuilder.Entity("Elsewedy_Platform2.Models.Video_ac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Cousre_acId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("Cousre_acId");

                    b.ToTable("video_ac");
                });

            modelBuilder.Entity("Elsewedy_Platform2.Models.Video_soft", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Cousre_softId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("Cousre_softId");

                    b.ToTable("video_soft");
                });

            modelBuilder.Entity("Cousre_acStudent", b =>
                {
                    b.HasOne("Elsewedy_Platform2.Models.Cousre_ac", null)
                        .WithMany()
                        .HasForeignKey("cousres_acId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Elsewedy_Platform2.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("studentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cousre_softStudent", b =>
                {
                    b.HasOne("Elsewedy_Platform2.Models.Cousre_soft", null)
                        .WithMany()
                        .HasForeignKey("cousre_softId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Elsewedy_Platform2.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("studentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Elsewedy_Platform2.Models.Cousre_ac", b =>
                {
                    b.HasOne("Elsewedy_Platform2.Models.Teacher", "teacher")
                        .WithMany("cousre")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("teacher");
                });

            modelBuilder.Entity("Elsewedy_Platform2.Models.Cousre_soft", b =>
                {
                    b.HasOne("Elsewedy_Platform2.Models.Instractor_Software", "teacher")
                        .WithMany("cousre_s")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("teacher");
                });

            modelBuilder.Entity("Elsewedy_Platform2.Models.Video_ac", b =>
                {
                    b.HasOne("Elsewedy_Platform2.Models.Cousre_ac", "Cousre_ac")
                        .WithMany("videos")
                        .HasForeignKey("Cousre_acId");

                    b.Navigation("Cousre_ac");
                });

            modelBuilder.Entity("Elsewedy_Platform2.Models.Video_soft", b =>
                {
                    b.HasOne("Elsewedy_Platform2.Models.Cousre_soft", "Cousre_soft")
                        .WithMany("Data")
                        .HasForeignKey("Cousre_softId");

                    b.Navigation("Cousre_soft");
                });

            modelBuilder.Entity("Elsewedy_Platform2.Models.Cousre_ac", b =>
                {
                    b.Navigation("videos");
                });

            modelBuilder.Entity("Elsewedy_Platform2.Models.Cousre_soft", b =>
                {
                    b.Navigation("Data");
                });

            modelBuilder.Entity("Elsewedy_Platform2.Models.Instractor_Software", b =>
                {
                    b.Navigation("cousre_s");
                });

            modelBuilder.Entity("Elsewedy_Platform2.Models.Teacher", b =>
                {
                    b.Navigation("cousre");
                });
#pragma warning restore 612, 618
        }
    }
}
